// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YetAnotherBankWeb;

namespace YetAnotherBankWeb.Migrations
{
    [DbContext(typeof(Project1Context))]
    partial class Project1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YetAnotherBankWeb.Accounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(20, 6)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<int>("InterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("InterestId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("YetAnotherBankWeb.Customers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("binary(64)")
                        .IsFixedLength(true)
                        .HasMaxLength(64);

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("binary(36)")
                        .IsFixedLength(true)
                        .HasMaxLength(36);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("YetAnotherBankWeb.CustomersToAccounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomersToAccounts");
                });

            modelBuilder.Entity("YetAnotherBankWeb.DebtAccounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("NextPaymentDue")
                        .HasColumnType("datetime");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(20, 6)");

                    b.Property<int>("PaymentsBehind")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("DebtAccounts");
                });

            modelBuilder.Entity("YetAnotherBankWeb.InterestRates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(20, 6)");

                    b.HasKey("Id");

                    b.ToTable("InterestRates");
                });

            modelBuilder.Entity("YetAnotherBankWeb.TermAccounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("MaturationDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("TermAccounts");
                });

            modelBuilder.Entity("YetAnotherBankWeb.Accounts", b =>
                {
                    b.HasOne("YetAnotherBankWeb.InterestRates", "Interest")
                        .WithMany("Accounts")
                        .HasForeignKey("InterestId")
                        .HasConstraintName("FK_Accounts_InterestRates")
                        .IsRequired();
                });

            modelBuilder.Entity("YetAnotherBankWeb.CustomersToAccounts", b =>
                {
                    b.HasOne("YetAnotherBankWeb.Accounts", "Account")
                        .WithMany("CustomersToAccounts")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_CustomersToAccounts_Accounts")
                        .IsRequired();

                    b.HasOne("YetAnotherBankWeb.Customers", "Customer")
                        .WithMany("CustomersToAccounts")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_CustomersToAccounts_Customers")
                        .IsRequired();
                });

            modelBuilder.Entity("YetAnotherBankWeb.DebtAccounts", b =>
                {
                    b.HasOne("YetAnotherBankWeb.Accounts", "Account")
                        .WithMany("DebtAccounts")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_DebtAccounts_Accounts")
                        .IsRequired();
                });

            modelBuilder.Entity("YetAnotherBankWeb.TermAccounts", b =>
                {
                    b.HasOne("YetAnotherBankWeb.Accounts", "Account")
                        .WithMany("TermAccounts")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_TermAccounts_Accounts")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
